
# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# [START anthos_config_management_anthos_config_management_samples_crds_customresourcedefinition_configmanagements.configmanagement.gke.io]
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: '1.0'
  name: configmanagements.configmanagement.gke.io
spec:
  group: configmanagement.gke.io
  names:
    kind: ConfigManagement
    plural: configmanagements
  preserveUnknownFields: true
  scope: Cluster
  validation:
    openAPIV3Schema:
      description: ConfigManagement is the Schema for the ConfigManagement API.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ConfigManagementSpec defines the desired state of ConfigManagement.
          properties:
            binauthz:
              description: BinAuthz enables Binary Authorization as recognized by
                the "binauthz.configmanagement.gke.io" label set to "true".
              properties:
                enabled:
                  description: 'Enable or disable BinAuthz.  Default: false.'
                  type: boolean
                policyRef:
                  description: PolicyRef is a reference to the BinAuthz policy which
                    will be evaluated. Required if BinAuthz is enabled.
                  properties:
                    gkeCluster:
                      description: BinAuthz policy associated with this GKE-on-GCP
                        cluster.
                      properties:
                        location:
                          description: Location of this cluster
                          type: string
                        name:
                          description: The name of this cluster according to GKE.
                            This is not necessarily the same as the hub membership
                            name.
                          type: string
                        project:
                          description: The name of the GCP project containing this
                            cluster
                          type: string
                      type: object
                  type: object
              type: object
            channel:
              description: 'Channel specifies a channel that can be used to resolve
                a specific addon, eg: stable It will be ignored if Version is specified'
              type: string
            clusterName:
              description: ClusterName, if defined, sets the name for this cluster.  If
                unset, the cluster is considered to be unnamed, and cannot use ClusterSelectors.
              type: string
            configConnector:
              description: ConfigConnector deploys the GCP Config Connector components
                as recognized by the "cnrm.cloud.google.com/system" label set to "true".
              properties:
                enabled:
                  description: 'Enable or disable the Config Connector.  Default:
                    false.'
                  type: boolean
              type: object
            enableLegacyFields:
              description: EnableLegacyFields instructs the operator to use spec.git
                for generating a RootSync resource in MultiRepo mode. Note that this
                should only be set to true if spec.enableMultiRepo is set to true.
              type: boolean
            enableMultiRepo:
              description: EnableMultiRepo instructs the operator to enable Multi
                Repo mode for Config Sync.
              type: boolean
            git:
              description: Git contains configuration specific to importing policies
                from a Git repo.
              properties:
                gcpServiceAccountEmail:
                  description: 'GCPServiceAccountEmail specifies the GCP service account
                    used to annotate the Config Sync Kubernetes Service Account. Note:
                    The field is used when secretType: gcpServiceAccount.'
                  type: string
                policyDir:
                  description: 'PolicyDir is the absolute path of the directory that
                    contains the local policy.  Default: the root directory of the
                    repo.'
                  type: string
                proxy:
                  description: Proxy is a struct that contains options for configuring
                    access to the Git repo via a proxy. Only has an effect when secretType
                    is one of ("cookiefile", "none").  Optional.
                  properties:
                    httpProxy:
                      description: HTTPProxy defines a HTTP_PROXY env variable used
                        to access the Git repo.  If both HTTPProxy and HTTPSProxy
                        are specified, HTTPProxy will be ignored. Optional.
                      type: string
                    httpsProxy:
                      description: HTTPSProxy defines a HTTPS_PROXY env variable used
                        to access the Git repo.  If both HTTPProxy and HTTPSProxy
                        are specified, HTTPProxy will be ignored. Optional.
                      type: string
                  type: object
                secretType:
                  description: SecretType is the type of secret configured for access
                    to the Git repo. Must be one of ssh, cookiefile, gcenode, token,
                    gcpserviceaccount or none. Required. The validation of this is
                    case-sensitive.
                  pattern: ^(ssh|cookiefile|gcenode|gcpserviceaccount|token|none)$
                  type: string
                syncBranch:
                  description: 'SyncBranch is the branch to sync from.  Default: "master".'
                  type: string
                syncRepo:
                  pattern: ^(((https?|git|ssh):\/\/)|git@)
                  type: string
                syncRev:
                  description: 'SyncRev is the git revision (tag or hash) to check
                    out. Default: HEAD.'
                  type: string
                syncWait:
                  description: 'SyncWaitSeconds is the time duration in seconds between
                    consecutive syncs.  Default: 15 seconds. Note that SyncWaitSecs
                    is not a time.Duration on purpose. This provides a reminder to
                    developers that customers specify this value using using integers
                    like "3" in their ConfigManagement YAML. However, time.Duration
                    is at a nanosecond granularity, and it''s easy to introduce a
                    bug where it looks like the code is dealing with seconds but its
                    actually nanoseconds (or vice versa).'
                  type: integer
              type: object
            hierarchyController:
              description: Hierarchy Controller enables HierarchyController components
                as recognized by the "hierarchycontroller.configmanagement.gke.io"
                label set to "true".
              properties:
                enablePodTreeLabels:
                  description: PodTreeLabels copies the tree labels from namespaces
                    to pods, allowing any system that uses pod logs (such as Stackdriver
                    logging) to inspect the hierarchy.
                  type: boolean
                enabled:
                  description: 'Enable or disable the Hierarchy Controller.  Default:
                    false.'
                  type: boolean
              type: object
            policyController:
              description: Policy Controller enables PolicyController components as
                recognized by the "gatekeeper.sh/manifest" label set to "true".
              properties:
                auditIntervalSeconds:
                  description: AuditIntervalSeconds. The number of seconds between
                    audit runs. Defaults to 60 seconds. To disable audit, set this
                    to 0.
                  format: int64
                  type: integer
                enabled:
                  description: 'Enable or disable the Policy Controller.  Default:
                    false.'
                  type: boolean
                exemptableNamespaces:
                  description: ExemptableNamespaces. The namespaces in this list are
                    able to have the admission.gatekeeper.sh/ignore label set. When
                    the label is set, Policy Controller will not be called for that
                    namespace or any resources contained in it. `gatekeeper-system`
                    is always exempted.
                  items:
                    type: string
                  type: array
                logDeniesEnabled:
                  description: 'LogDeniesEnabled.  If true, Policy Controller will
                    log all denies and dryrun failures.  No effect unless policyController
                    is enabled.  Default: false.'
                  type: boolean
                referentialRulesEnabled:
                  description: 'ReferentialRulesEnabled.  If true, Policy Controller
                    will allow `data.inventory` references in the contents of ConstraintTemplate
                    Rego.  No effect unless policyController is enabled.  Default:
                    false.'
                  type: boolean
                templateLibraryInstalled:
                  description: 'TemplateLibraryInstalled.  If true, a set of default
                    ConstraintTemplates will be deployed to the cluster. ConstraintTemplates
                    will not be deployed if this is explicitly set to false or if
                    policyController is not enabled. Default: true.'
                  type: boolean
              type: object
            sourceFormat:
              description: "SourceFormat specifies how the repository is formatted.\
                \ See documentation for specifics of what these options do. \n Must\
                \ be one of hierarchy, unstructured. Optional. Set to hierarchy if\
                \ not specified. \n The validation of this is case-sensitive."
              pattern: ^(hierarchy|unstructured|)$
              type: string
            version:
              description: Version specifies the exact addon version to be deployed,
                eg 1.2.3 It should not be specified if Channel is specified
              type: string
          type: object
        status:
          description: ConfigManagementStatus defines the observed state of ConfigManagement.
          properties:
            configManagementVersion:
              description: ConfigManagementVersion is the semantic version number
                of the config management system enforced by the currently running
                config management operator.
              type: string
            errors:
              items:
                type: string
              type: array
            healthy:
              type: boolean
          required:
          - healthy
          type: object
      required:
      - metadata
      - spec
      type: object
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ''
    plural: ''
  conditions: []
  storedVersions: []
# [END anthos_config_management_anthos_config_management_samples_crds_customresourcedefinition_configmanagements.configmanagement.gke.io]
---
