
# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# [START anthos_config_management_config_root_cluster_constrainttemplate_k8srequiredlabels]
apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8srequiredlabels
spec:
  crd:
    spec:
      names:
        kind: K8sRequiredLabels
        listKind: K8sRequiredLabelsList
        plural: k8srequiredlabels
        singular: k8srequiredlabels
      validation:
        openAPIV3Schema:
          properties:
            labels:
              items:
                properties:
                  allowedRegex:
                    type: string
                  key:
                    type: string
                type: object
              type: array
            message:
              type: string
  targets:
  - rego: "package k8srequiredlabels\nget_message(parameters, _default) = msg {\n\
      \  not parameters.message\n  msg := _default\n}\nget_message(parameters, _default)\
      \ = msg {\n  msg := parameters.message\n}\nviolation[{\"msg\": msg, \"details\"\
      : {\"missing_labels\": missing}}] {\n  provided := {label | input.review.object.metadata.labels[label]}\n\
      \  required := {label | label := input.parameters.labels[_].key}\n  missing\
      \ := required - provided\n  count(missing) > 0\n  def_msg := sprintf(\"you must\
      \ provide labels: %v\", [missing])\n  msg := get_message(input.parameters, def_msg)\n\
      }\nviolation[{\"msg\": msg}] {\n  value := input.review.object.metadata.labels[key]\n\
      \  expected := input.parameters.labels[_]\n  expected.key == key\n  # do not\
      \ match if allowedRegex is not defined, or is an empty string\n  expected.allowedRegex\
      \ != \"\"\n  not re_match(expected.allowedRegex, value)\n  def_msg := sprintf(\"\
      Label <%v: %v> does not satisfy allowed regex: %v\", [key, value, expected.allowedRegex])\n\
      \  msg := get_message(input.parameters, def_msg)\n}\n"
    target: admission.k8s.gatekeeper.sh
# [END anthos_config_management_config_root_cluster_constrainttemplate_k8srequiredlabels]
---
