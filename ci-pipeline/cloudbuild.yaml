# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# [START anthosconfig_ci_pipeline_cloud_build]
steps:
# Generate the kubeconfig file needed to authenticate to the GKE cluster. The root user generates this file with restricted permissions.
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['config', 'current-context']
  volumes:
  - name: 'kube'
    path: '/kube'
  env:
  - 'KUBECONFIG=/kube/config'
  - 'CLOUDSDK_COMPUTE_ZONE=ZONE'
  - 'CLOUDSDK_CONTAINER_CLUSTER=CLUSTER_NAME'
  - 'CLOUDSDK_CONTAINER_USE_APPLICATION_DEFAULT_CREDENTIALS=true'
# Grant read permissions to the kubeconfig file.
- name: 'bash'
  args: ['chmod', '644', '/kube/config']
  volumes:
  - name: 'kube'
    path: '/kube'
# Grant read/write permissions to the workspace.
- name: 'bash'
  args: ['chmod', '777', '/workspace']
# Run nomos hydrate on the config-root directory and output the result into hydrated-configs.
- name: 'gcr.io/config-management-release/nomos'
  args: ['nomos', 'hydrate', '--path', '/workspace/ci-pipeline/config-root', '--output', '/workspace/hydrated-configs']
  volumes:
  - name: 'kube'
    path: '/kube'
  env:
  - 'KUBECONFIG=/kube/config'
# Recursively read a directory of kubernetes YAML configs from the workspace and output them as one list into config-source.yaml.
- name: 'gcr.io/config-management-release/read-yaml'
  args: ['--input', '/dev/null', '-d', 'source_dir=/workspace/hydrated-configs', '--output', '/workspace/config-source.yaml']
# Validate input configs against any OPA ConstraintTemplates and Constraints it finds in its input.
- name: 'gcr.io/config-management-release/policy-controller-validate'
  args: ['--input', '/workspace/config-source.yaml']
# [END anthosconfig_ci_pipeline_cloud_build]
